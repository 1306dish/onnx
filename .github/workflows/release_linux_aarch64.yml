name: LinuxRelease_aarch64

on:
  schedule:
    # Run weekly on Monday 00:00
    - cron:  '00 00 * * MON'
  push:
    branches: [master, rel-*]
  pull_request:
    branches: [rel-*]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: ['aarch64']
    env:
      py: /opt/python/${{ matrix.python-version }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}

    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Install python dependencies
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} ${{ env.py }} -m pip install -U numpy protobuf==3.11.3
    - name: Install dependencies
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} yum install -y protobuf-compiler protobuf-devel
          
    - name: Build manylinux2014_aarch64
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '\
          yum install -y sudo && \
          sudo .github/workflows/manylinux/entrypoint.sh ${{ env.py }} manylinux2014_aarch64 ${{ github.event_name }}'

    - name: Test wheel with Python ${{ matrix.python-version }}
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m pip install dist/*-manylinux2014_aarch64.whl && \
          python -m pip install pytest==5.4.3 nbval ipython==7.16.1 && \
          pytest'
    #- name: Test backend test data
     # run: |
      #  # onnx.checker all existing backend data
       # python workflow_scripts/test_generated_backend.py
        ## onnx.checker all generated backend data
        #python onnx/backend/test/cmd_tools.py generate-data
        #python workflow_scripts/test_generated_backend.py
    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: dist

    - name: Upload wheel to TestPyPI weekly
      if: (github.event_name == 'schedule') # Only triggered by weekly event
      run: |
        python -m pip install -q twine
        twine upload --verbose dist/*.whl --repository-url https://test.pypi.org/legacy/ -u ${{ secrets.TESTPYPI_USERNAME }} -p ${{ secrets.TESTPYPI_PASSWORD }}
